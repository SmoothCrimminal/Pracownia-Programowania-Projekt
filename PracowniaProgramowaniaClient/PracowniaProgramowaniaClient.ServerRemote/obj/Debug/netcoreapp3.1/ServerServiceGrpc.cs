// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: serverService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PracowniaProgramowaniaServer {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class PracowniaProgramowaniaServer
  {
    static readonly string __ServiceName = "serverService.PracowniaProgramowaniaServer";

    static readonly grpc::Marshaller<global::PracowniaProgramowaniaServer.HelloRequest> __Marshaller_serverService_HelloRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PracowniaProgramowaniaServer.HelloRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PracowniaProgramowaniaServer.HelloReply> __Marshaller_serverService_HelloReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PracowniaProgramowaniaServer.HelloReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PracowniaProgramowaniaServer.CreateBrandRequest> __Marshaller_serverService_CreateBrandRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PracowniaProgramowaniaServer.CreateBrandRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::PracowniaProgramowaniaServer.CreateBrandReply> __Marshaller_serverService_CreateBrandReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::PracowniaProgramowaniaServer.CreateBrandReply.Parser.ParseFrom);

    static readonly grpc::Method<global::PracowniaProgramowaniaServer.HelloRequest, global::PracowniaProgramowaniaServer.HelloReply> __Method_SayHello = new grpc::Method<global::PracowniaProgramowaniaServer.HelloRequest, global::PracowniaProgramowaniaServer.HelloReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SayHello",
        __Marshaller_serverService_HelloRequest,
        __Marshaller_serverService_HelloReply);

    static readonly grpc::Method<global::PracowniaProgramowaniaServer.CreateBrandRequest, global::PracowniaProgramowaniaServer.CreateBrandReply> __Method_CreateBrand = new grpc::Method<global::PracowniaProgramowaniaServer.CreateBrandRequest, global::PracowniaProgramowaniaServer.CreateBrandReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBrand",
        __Marshaller_serverService_CreateBrandRequest,
        __Marshaller_serverService_CreateBrandReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PracowniaProgramowaniaServer.ServerServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PracowniaProgramowaniaServer</summary>
    public partial class PracowniaProgramowaniaServerClient : grpc::ClientBase<PracowniaProgramowaniaServerClient>
    {
      /// <summary>Creates a new client for PracowniaProgramowaniaServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PracowniaProgramowaniaServerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PracowniaProgramowaniaServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PracowniaProgramowaniaServerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PracowniaProgramowaniaServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PracowniaProgramowaniaServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::PracowniaProgramowaniaServer.HelloReply SayHello(global::PracowniaProgramowaniaServer.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHello(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::PracowniaProgramowaniaServer.HelloReply SayHello(global::PracowniaProgramowaniaServer.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SayHello, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::PracowniaProgramowaniaServer.HelloReply> SayHelloAsync(global::PracowniaProgramowaniaServer.HelloRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SayHelloAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::PracowniaProgramowaniaServer.HelloReply> SayHelloAsync(global::PracowniaProgramowaniaServer.HelloRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SayHello, null, options, request);
      }
      public virtual global::PracowniaProgramowaniaServer.CreateBrandReply CreateBrand(global::PracowniaProgramowaniaServer.CreateBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBrand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::PracowniaProgramowaniaServer.CreateBrandReply CreateBrand(global::PracowniaProgramowaniaServer.CreateBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBrand, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::PracowniaProgramowaniaServer.CreateBrandReply> CreateBrandAsync(global::PracowniaProgramowaniaServer.CreateBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBrandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::PracowniaProgramowaniaServer.CreateBrandReply> CreateBrandAsync(global::PracowniaProgramowaniaServer.CreateBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBrand, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override PracowniaProgramowaniaServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PracowniaProgramowaniaServerClient(configuration);
      }
    }

  }
}
#endregion
